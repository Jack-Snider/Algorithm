"""
- 문제 -
당신은 음식점의 계산을 도와주는 점원이다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원짜리
동전이 무한히 존재한다고 가정한다. 손님에게 거슬러 줘여 할 돈이 N원일 때 거슬러 줘야 할 동전의 최소 개수를
구하라. 단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

- 문제해설 -
이 문제는 그리디 알고리즘을 이용해 풀 수 있는 대표적인 문제로 간단한 아이디어만 떠올릴 수 있으면
문제를 해결할 수 있다. 그것은 바로 '가장 큰 화폐 단위부터' 돈을 거슬러 주는 것이다. N원을
거슬러 줘야 할 때, 가장 먼저 500원으로 거슬러 줄 수 있을 만큼 거슬러 준다. 그 다음 100원, 50원,
10원짜리 동전을 차례대로 거슬러 줄 수 있을 만큼 거슬러 주면 최소의 동전 개수로 모두 거슬러 줄 수 있다.

"""
def solution( n ):

    """
        parameter( int ) : 거슬러 줘야할 돈
        return( int ) : 동전의 개수
    """

    count = 0

    # 큰 단위 화폐부터 차례대로 확인
    coin_types = [ 500, 100, 50, 10 ]

    for coin in coin_types:
        count += n // coin # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
        n %= coin

    return count

print( solution( 1260 ) )